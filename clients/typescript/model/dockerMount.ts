/**
 * Torizon Deployment API
 * Toradex Development API to build and deploy application on Torizon
 *
 * The version of the OpenAPI document: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { DockerMountBindOptions } from './dockerMountBindOptions';
import { DockerMountTmpfsOptions } from './dockerMountTmpfsOptions';
import { DockerMountVolumeOptions } from './dockerMountVolumeOptions';

export class DockerMount {
    /**
    * Container path.
    */
    'target'?: string;
    /**
    * Mount source (e.g. a volume name, a host path).
    */
    'source'?: string;
    /**
    * The mount type. Available types:  - `bind` Mounts a file or directory from the host into the container. Must exist prior to creating the container. - `volume` Creates a volume with the given name and options (or uses a pre-existing volume with the same name and options). These are **not** removed when the container is removed. - `tmpfs` Create a tmpfs with the given options. The mount source cannot be specified for tmpfs. 
    */
    'type'?: DockerMount.TypeEnum;
    /**
    * Whether the mount should be read-only.
    */
    'readOnly'?: boolean;
    /**
    * The consistency requirement for the mount: `default`, `consistent`, `cached`, or `delegated`.
    */
    'consistency'?: string;
    'bindOptions'?: DockerMountBindOptions;
    'volumeOptions'?: DockerMountVolumeOptions;
    'tmpfsOptions'?: DockerMountTmpfsOptions;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "target",
            "baseName": "Target",
            "type": "string"
        },
        {
            "name": "source",
            "baseName": "Source",
            "type": "string"
        },
        {
            "name": "type",
            "baseName": "Type",
            "type": "DockerMount.TypeEnum"
        },
        {
            "name": "readOnly",
            "baseName": "ReadOnly",
            "type": "boolean"
        },
        {
            "name": "consistency",
            "baseName": "Consistency",
            "type": "string"
        },
        {
            "name": "bindOptions",
            "baseName": "BindOptions",
            "type": "DockerMountBindOptions"
        },
        {
            "name": "volumeOptions",
            "baseName": "VolumeOptions",
            "type": "DockerMountVolumeOptions"
        },
        {
            "name": "tmpfsOptions",
            "baseName": "TmpfsOptions",
            "type": "DockerMountTmpfsOptions"
        }    ];

    static getAttributeTypeMap() {
        return DockerMount.attributeTypeMap;
    }
}

export namespace DockerMount {
    export enum TypeEnum {
        Bind = <any> 'bind',
        Volume = <any> 'volume',
        Tmpfs = <any> 'tmpfs'
    }
}
