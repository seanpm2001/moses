/**
 * Torizon IDE-backend API
 * Toradex API to build and deploy applications running as containers on Torizon
 *
 * The version of the OpenAPI document: 1.1.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* The state of the container.
*/
export class DockerContainerState {
    /**
    * The status of the container. For example, `\"running\"` or `\"exited\"`. 
    */
    'status'?: DockerContainerState.StatusEnum;
    /**
    * Whether this container is running.  Note that a running container can be _paused_. The `Running` and `Paused` booleans are not mutually exclusive:  When pausing a container (on Linux), the cgroups freezer is used to suspend all processes in the container. Freezing the process requires the process to be running. As a result, paused containers are both `Running` _and_ `Paused`.  Use the `Status` field instead to determine if a container\'s state is \"running\". 
    */
    'running'?: boolean;
    /**
    * Whether this container is paused.
    */
    'paused'?: boolean;
    /**
    * Whether this container is restarting.
    */
    'restarting'?: boolean;
    /**
    * Whether this container has been killed because it ran out of memory.
    */
    'oOMKilled'?: boolean;
    'dead'?: boolean;
    /**
    * The process ID of this container
    */
    'pid'?: number;
    /**
    * The last exit code of this container
    */
    'exitCode'?: number;
    'error'?: string;
    /**
    * The time when this container was last started.
    */
    'startedAt'?: string;
    /**
    * The time when this container last exited.
    */
    'finishedAt'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "status",
            "baseName": "Status",
            "type": "DockerContainerState.StatusEnum"
        },
        {
            "name": "running",
            "baseName": "Running",
            "type": "boolean"
        },
        {
            "name": "paused",
            "baseName": "Paused",
            "type": "boolean"
        },
        {
            "name": "restarting",
            "baseName": "Restarting",
            "type": "boolean"
        },
        {
            "name": "oOMKilled",
            "baseName": "OOMKilled",
            "type": "boolean"
        },
        {
            "name": "dead",
            "baseName": "Dead",
            "type": "boolean"
        },
        {
            "name": "pid",
            "baseName": "Pid",
            "type": "number"
        },
        {
            "name": "exitCode",
            "baseName": "ExitCode",
            "type": "number"
        },
        {
            "name": "error",
            "baseName": "Error",
            "type": "string"
        },
        {
            "name": "startedAt",
            "baseName": "StartedAt",
            "type": "string"
        },
        {
            "name": "finishedAt",
            "baseName": "FinishedAt",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return DockerContainerState.attributeTypeMap;
    }
}

export namespace DockerContainerState {
    export enum StatusEnum {
        Created = <any> 'created',
        Running = <any> 'running',
        Paused = <any> 'paused',
        Restarting = <any> 'restarting',
        Removing = <any> 'removing',
        Exited = <any> 'exited',
        Dead = <any> 'dead'
    }
}
